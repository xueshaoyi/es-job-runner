<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xsy.job.dao.JobInitInfoMapper">
  <sql id="Table">
    job_init_info
  </sql>
  <resultMap id="BaseResultMap" type="com.xsy.job.model.JobInitInfo">
    <result column="id" property="id" jdbcType="BIGINT"/>
    <result column="job_name" property="jobName" jdbcType="VARCHAR"/>
    <result column="job_cron" property="jobCron" jdbcType="VARCHAR"/>
    <result column="executer_class_name" property="executerClassName" jdbcType="VARCHAR"/>
    <result column="strategy_class" property="strategyClass" jdbcType="VARCHAR"/>
    <result column="interval_time" property="intervalTime" jdbcType="INTEGER"/>
    <result column="execute_param" property="executeParam" jdbcType="VARCHAR"/>
    <result column="trigger_status" property="triggerStatus" jdbcType="BOOLEAN"/>
    <result column="trigger_last_time" property="triggerLastTime" jdbcType="BIGINT"/>
    <result column="trigger_next_time" property="triggerNextTime" jdbcType="BIGINT"/>
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
  </resultMap>
  <sql id="Base_Column_List">
    id, job_name, job_cron, executer_class_name, strategy_class, interval_time, execute_param,
    trigger_status, trigger_last_time, trigger_next_time, create_time, update_time
  </sql>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from
    <include refid="Table"></include>
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insertSelective" parameterType="com.xsy.job.model.JobInitInfo">
    insert into
    <include refid="Table"></include>
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="jobName != null">
        job_name,
      </if>
      <if test="jobCron != null">
        job_cron,
      </if>
      <if test="executerClassName != null">
        executer_class_name,
      </if>
      <if test="strategyClass != null">
        strategy_class,
      </if>
      <if test="intervalTime != null">
        interval_time,
      </if>
      <if test="executeParam != null">
        execute_param,
      </if>
      <if test="triggerStatus != null">
        trigger_status,
      </if>
      <if test="triggerLastTime != null">
        trigger_last_time,
      </if>
      <if test="triggerNextTime != null">
        trigger_next_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="jobName != null">
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobCron != null">
        #{jobCron,jdbcType=VARCHAR},
      </if>
      <if test="executerClassName != null">
        #{executerClassName,jdbcType=VARCHAR},
      </if>
      <if test="strategyClass != null">
        #{strategyClass,jdbcType=VARCHAR},
      </if>
      <if test="intervalTime != null">
        #{intervalTime,jdbcType=INTEGER},
      </if>
      <if test="executeParam != null">
        #{executeParam,jdbcType=VARCHAR},
      </if>
      <if test="triggerStatus != null">
        #{triggerStatus,jdbcType=TINYINT},
      </if>
      <if test="triggerLastTime != null">
        #{triggerLastTime,jdbcType=BIGINT},
      </if>
      <if test="triggerNextTime != null">
        #{triggerNextTime,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>


  <select id="getInfoByJobName" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from
    <include refid="Table" />
    where
    job_name = #{jobName}
    and executer_class_name = #{exectuerClass}
    and trigger_status = 1;
  </select>


  <update id="updateJobCronInfo" >
    update <include refid="Table" />
    set  job_cron = #{cron}
    where
    job_name = #{jobName}
    and executer_class_name = #{exectuerClass};
  </update>

</mapper>